import streamlit as st
from time import sleep
from src.utils import adicionar_questao

st.header("‚ûï Adicionar Nova Quest√£o")

if "logado" not in st.session_state or not st.session_state["logado"]:
    st.warning("Voc√™ precisa estar logado para acessar esta p√°gina. Acesse a p√°gina app no menu lateral e realize o login.")
    st.stop()

st.sidebar.title(f"Bem-vindo, {st.session_state['usuario']}")
if st.sidebar.button("Sair"):
    st.session_state.clear()
    st.rerun()

# States para limpar campos ap√≥s submiss√£o
if "assertiva" not in st.session_state:
    st.session_state.assertiva = ""
if "justificativa" not in st.session_state:
    st.session_state.justificativa = ""
if "gabarito" not in st.session_state:
        st.session_state.gabarito = None


materias = ['ALP', 'DHU', 'EDA', 'EFV', 'FPD','FTR','PER', 'PLF', 'RLH']
materia = st.selectbox("Mat√©ria", materias)

if materia:
    dict_assuntos = {
        'ALP': ['3. COMPET√äNCIAS LEGAIS DA PRF', 
                '4. ASPECTOS LEGAIS DO USO DA FOR√áA', 
                '5. ASPECTOS LEGAIS DA ABORDAGEM POLICIAL', 
                '6. PERSECU√á√ÉO PENAL NA PR√ÅTICA PRF', 
                '7. PRIS√ÉO', '8. NARRATIVA POLICIAL', 
                '9. ABUSO DE AUTORIDADE', 
                '10. TORTURA',
                '11. CRIMES EM ESP√âCIE MAIS COMUNS'],
        'DHU': ['4. DIREITOS HUMANOS DOS POLICIAIS',
                '5. ESTRUTURAS DE DIREITOS HUMANOS DA PRF',
                '6. CONHECIMENTO HUMANO E M√âTODO CIENT√çFICO',
                '7. VIESES COGNITIVOS E ERROS DE PERCEP√á√ÉO',
                '8. VIOL√äNCIA E CRIMINALIDADE',
                '9. RACISMO',
                '10. PESSOAS EMPOBRECIDAS, PESSOAS EM SITUA√á√ÉO DE RUA, ANDARILHOSTRECHEIROS',
                '11. POVOS IND√çGENAS E QUILOMBOLAS',
                '13. PESSOAS COM DEFICI√äNCIA',
                '20. TRABALHO ESCRAVO CONTEMPOR√ÇNEO'],
        'EDA': ['1. O TR√ÅFICO DE DROGAS E O CRIME ORGANIZADO NO BRASIL',
                '2. DAS DROGAS',
                '3. DAS REGI√ïES PRODUTORAS E DAS ROTAS DO TR√ÅFICO DE DROGAS, ARMAS E MUNI√á√ïES',
                '4 DA ENTREVISTA'],
        'EFV': ['1. HIST√ìRICO DA IDENTIFICA√á√ÉO VEICULAR NO BRASIL', 
                '2. IDENTIFICA√á√ÉO VEICULAR',
                '3. DOCUMENTOS ELETR√îNICOS', 
                '4. SISTEMAS DE CONSULTAS'],
        'FPD': ['1. CONCEITOS EM CAPACIDADE VEICULAR',
                '2. LIMITES DE PESO',
                '3. LIMITE LEGAL DE PESO',
                '4. LIMITE T√âCNICO DE PESO',
                '5. LIMITE REGULAMENTAR DE PESO',
                '6. DIMENS√ïES M√ÅXIMAS REGULAMENTARES'],
        'FTR': ['1. INTRODU√á√ÉO', 
                '2. MEDIDAS ADMINISTRATIVAS', 
                '3. HABILITA√á√ÉO, ESP√âCIES, CATEGORIAS, CURSOS ESPECIALIZADOS E EXAME TOXICOL√ìGICO',
                '4. VE√çCULOS: REGISTRO, LICENCIAMENTO E EMPLACAMENTO',
                '5. NORMAS GERAIS DE CIRCULA√á√ÉO E CONDUTA',
                '6. EQUIPAMENTOS OBRIGAT√ìRIOS'],
        'PER': ['2. DEFINI√á√ïES',
                '3. ESTADO F√çSICO DOS ENVOLVIDOS',
                '4. DIN√ÇMICA DO SINISTRO',
                '5. PRIORIDADES NO ATENDIMENTO DE SINISTROS',
                '6. RECEBIMENTO DA COMUNICA√á√ÉO DE SINISTRO'],
        'PLF': ['2. DIRECIONAMENTO ESTRAT√âGICO OPERACIONAL',
                '3. SERVI√áOS E ATIVIDADES OPERACIONAIS',
                '4. ESTRUTURA E COMPET√äNCIAS OPERACIONAIS',
                '5. EXECU√á√ÉO OPERACIONAL',
                '6. ROTINAS OPERACIONAIS',
                '10. SISTEMAS, REGISTROS E RELAT√ìRIOS'],
        'RLH': ['4. INTELIG√äNCIA',
                '5. COMUNICA√á√ÉO',
                '6. EQUIPE',
                '7. ESTRESSE',
                '8. MUDAN√áA',
                '9. ATENDIMENTO AO CIDAD√ÉO']
        }
    assuntos_add = dict_assuntos[materia]
    assunto = st.selectbox("Assunto", assuntos_add)

#     if assunto:
#         st.session_state.assertiva = st.text_area("Assertiva", value=st.session_state.assertiva, key="assertiva_input")
        
#         # Colunas para os checkboxes estilizados
#         col1, col2 = st.columns(2)

#         with col1:
#             if st.button("‚úÖ Certo", key="btn_certo", use_container_width=True):
#                 st.session_state.gabarito = "Certo"

#         with col2:
#             if st.button("‚ùå Errado", key="btn_errado", use_container_width=True):
#                 st.session_state.gabarito = "Errado"

#         # Mostrar gabarito selecionado com destaque
#         if st.session_state.gabarito:
#             if st.session_state.gabarito == "Certo":
#                 st.success("Gabarito selecionado: ‚úÖ Certo")
#             else:
#                 st.error("Gabarito selecionado: ‚ùå Errado")

#         st.session_state.justificativa = st.text_area("Justificativa", value=st.session_state.justificativa, key="justificativa_input")

#         if st.button("Salvar Quest√£o", type='primary'):
#             if not st.session_state.gabarito:
#                 st.warning("Selecione um gabarito antes de salvar a quest√£o.")
#             elif not st.session_state.assertiva.strip() or not st.session_state.justificativa.strip():
#                 st.warning("Preencha todos os campos antes de salvar.")
#             else:
#                 adicionar_questao(materia, 
#                                 assunto, 
#                                 st.session_state.assertiva, 
#                                 st.session_state.gabarito, 
#                                 st.session_state.justificativa)
#                 st.success("Quest√£o adicionada com sucesso!")

#                 sleep(1.5)

#                 st.cache_data.clear()

#                 st.session_state.assertiva = ""
#                 st.session_state.justificativa = ""
#                 st.session_state.gabarito = None
                
#                 # For√ßa a interface a atualizar os campos
#                 st.rerun()

            

    if assunto:
        with st.form("form_adicionar_questao", border=False):
            st.session_state.assertiva = st.text_area(
                "Assertiva", 
                value=st.session_state.assertiva, 
                key="assertiva_input"
            )

            col1, col2 = st.columns(2)
            with col1:
                if st.form_submit_button("‚úÖ Certo", use_container_width=True):
                    st.session_state.gabarito = "Certo"
            with col2:
                if st.form_submit_button("‚ùå Errado", use_container_width=True):
                    st.session_state.gabarito = "Errado"

            # Mostra o gabarito escolhido
            if st.session_state.gabarito:
                if st.session_state.gabarito == "Certo":
                    st.success("Gabarito selecionado: ‚úÖ Certo")
                else:
                    st.error("Gabarito selecionado: ‚ùå Errado")

            st.session_state.justificativa = st.text_area(
                "Justificativa", 
                value=st.session_state.justificativa, 
                key="justificativa_input"
            )

            submit = st.form_submit_button("üíæ Salvar Quest√£o", use_container_width=True)

            if submit:
                if not st.session_state.gabarito:
                    st.warning("Selecione um gabarito antes de salvar a quest√£o.")
                elif not st.session_state.assertiva.strip() or not st.session_state.justificativa.strip():
                    st.warning("Preencha todos os campos antes de salvar.")
                else:
                    adicionar_questao(
                        materia, 
                        assunto, 
                        st.session_state.assertiva, 
                        st.session_state.gabarito, 
                        st.session_state.justificativa
                    )
                    st.success("Quest√£o adicionada com sucesso!")
                    sleep(1.5)
                    st.cache_data.clear()

                    st.session_state.assertiva = ""
                    st.session_state.justificativa = ""
                    st.session_state.gabarito = None
                    st.rerun()
